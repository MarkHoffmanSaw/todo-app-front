{"version":3,"sources":["components/navigation/Navbar.js","components/Header.js","components/AddTask.js","components/Task.js","components/Tasks.js","components/Footer.js","components/links/Main.js","components/links/Feauters.js","components/links/Creators.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","Header","btnTitle","onToggle","onClick","defaultProps","String","AddTask","onAdd","useState","title","setTitle","startDate","setStartDate","endDate","setEndDate","description","setDescription","isImportant","setIsImportant","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Task","task","onDelete","onDoubleClick","id","Tasks","tasks","map","Footer","Main","Feauters","App","formStatus","setFormStatus","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleImportant","taskToToggle","updTask","path","exact","render","props","length","component","Creators","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2eba55b6.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h1>\r\n        ToDo <span className=\"logo\">App</span>\r\n      </h1>\r\n      <div className=\"links\">\r\n        <Link to=\"/start\"> Start \"To Do\"</Link>\r\n        <Link to=\"/feauters\"> Feauters</Link>\r\n        <Link to=\"/creators\"> Creators</Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const Header = ({ btnTitle, onToggle }) => {\r\n  return (\r\n    <header>\r\n      <h1>Current tasks list</h1>\r\n      <button className=\"btn btn__form\" onClick={onToggle}>\r\n        {btnTitle}\r\n      </button>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  btnTitle: String,\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\"); // startDate\r\n  const [endDate, setEndDate] = useState(\"\"); // endDate\r\n  const [description, setDescription] = useState(\"\"); // description\r\n  const [isImportant, setIsImportant] = useState(\"\"); // isImportant\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!title || !startDate || !endDate || !description)\r\n      alert(\"All fields must be filled!\");\r\n\r\n    onAdd({ title, startDate, endDate, description, isImportant });\r\n\r\n    setTitle(\"\");\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n    setDescription(\"\");\r\n    setIsImportant(false);\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onSubmit}>\r\n      <div className={title ? \"form-control\" : \"form-control alert\"}>\r\n        <label>Task name</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter a task\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className={startDate ? \"form-control\" : \"form-control alert\"}>\r\n        <label>Start</label>\r\n        <input\r\n          type=\"date\"\r\n          placeholder=\"date\"\r\n          value={startDate}\r\n          onChange={(e) => setStartDate(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className={endDate ? \"form-control\" : \"form-control alert\"}>\r\n        <label>End</label>\r\n        <input\r\n          type=\"date\"\r\n          placeholder=\"date\"\r\n          value={endDate}\r\n          onChange={(e) => setEndDate(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className={description ? \"form-control\" : \"form-control alert\"}>\r\n        <label>Description</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"add description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control__check\">\r\n        <label>Important status</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={isImportant}\r\n          value={isImportant}\r\n          onChange={(e) => setIsImportant(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n      <input className=\"btn btn__primary\" type=\"submit\" value=\"To Do\" />\r\n    </form>\r\n  );\r\n};\r\nexport default AddTask;\r\n","const Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`list-item ${task.isImportant ? \"important\" : \"\"}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>{task.title}</h3>{\" \"}\r\n      <h4>\r\n        Start: {task.startDate} | End: {task.endDate}\r\n      </h4>\r\n      <p>{task.description}</p>\r\n      <button className=\"btn btn__danger\" onClick={() => onDelete(task.id)}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task.js\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      <div className=\"list\">\r\n        {tasks.map((task) => (\r\n          <Task\r\n            key={task.id}\r\n            task={task}\r\n            onDelete={onDelete}\r\n            onToggle={onToggle}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Tasks;\r\n","const Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>Copyright &copy; 2021.</p>\r\n      <p>All rights reserved. Made by Artur Sopov (inst: @vice.artur)</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","const Main = () => {\r\n  return (\r\n    <>\r\n      <h2>Welcome to the our page, dear guest!</h2>\r\n      <p>Enjoy and go \"To Do\" with us!</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","const Feauters = () => {\r\n  return (\r\n    <>\r\n      <p>Creating tasks</p>\r\n      <p>So useful</p>\r\n      <p>Very simple</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Feauters;\r\n","const Feauters = () => {\r\n  return (\r\n    <>\r\n      <p>Artur Sopov</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Feauters;\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// Navigation\nimport Navbar from \"./components/navigation/Navbar.js\";\n\n// App\nimport Header from \"./components/Header.js\";\nimport AddTask from \"./components/AddTask.js\";\nimport Tasks from \"./components/Tasks.js\";\nimport Footer from \"./components/Footer.js\";\n\n// Directions to links\nimport Main from \"./components/links/Main.js\";\nimport Feauters from \"./components/links/Feauters.js\";\nimport Creators from \"./components/links/Creators.js\";\n\nfunction App() {\n  const [formStatus, setFormStatus] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  // 1. New async function inside the useEffect hook [!]\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks(); // 3. Call the function after fetching\n  }, []);\n\n  // 2. Fetch data from local server\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n\n    return data; // Array all tasks\n  };\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n\n    return data; // Array task[id]\n  };\n\n  // Add a task\n  const addTask = async (task) => {\n    if (task.title && task.startDate && task.endDate && task.description) {\n      const res = await fetch(\"http://localhost:5000/tasks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(task),\n      });\n\n      const data = await res.json();\n      setTasks([...tasks, data]);\n    }\n\n    // *** For UI only ***\n    // if (task.title && task.startDate && task.endDate && task.description) {\n    //   const id = Math.floor(Math.random() * 10000) + 1;\n    //   const newTask = { id, ...task };\n    //   setTasks([...tasks, newTask]);\n    // }\n  };\n\n  // Delete a task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, { method: \"DELETE\" });\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle important\n  const toggleImportant = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, isImportant: !taskToToggle.isImportant };\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      // upd on the local server\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, isImportant: data.isImportant } : task\n      )\n    );\n  };\n\n  return (\n    <Router>\n      <div id=\"nav\">\n        <Navbar />\n      </div>\n\n      <Route path=\"/\" exact render={Main} />\n\n      {/* APP */}\n\n      <Route\n        path=\"/start\"\n        exact\n        render={(props) => (\n          <>\n            <div className=\"container\">\n              <Header\n                onToggle={() => setFormStatus(!formStatus)}\n                btnTitle={formStatus ? \"Close the form\" : \"Create a new task\"}\n              />\n              {formStatus && <AddTask onAdd={addTask} />}\n              <hr />\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleImportant}\n                />\n              ) : (\n                <h3>No active tasks</h3>\n              )}\n              <Footer />\n            </div>\n          </>\n        )}\n      />\n\n      {/* FEAUTERS */}\n\n      <Route path=\"/feauters\" component={Feauters} />\n\n      {/* CREATORS */}\n\n      <Route path=\"/creators\" component={Creators} />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./sass/main.scss\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}